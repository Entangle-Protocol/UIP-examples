{
  "address": "MeskEHG9jyVQGrZsNSYTLzxH9waE6UjrWEsviCQn2E1",
  "metadata": {
    "name": "messenger",
    "version": "0.1.0",
    "spec": "0.1.0",
    "description": "Created with Anchor"
  },
  "docs": [
    "The messenger program module."
  ],
  "instructions": [
    {
      "name": "execute",
      "docs": [
        "Executes an incoming cross-chain message, saving the received message in",
        "a `CrossChainMessage` account."
      ],
      "discriminator": [
        101,
        120,
        101,
        99,
        117,
        116,
        101,
        0
      ],
      "accounts": [
        {
          "name": "uip_msg"
        }
      ],
      "args": []
    },
    {
      "name": "initialize",
      "docs": [
        "Initializes the messenger with an admin and optionally a list of allowed",
        "senders."
      ],
      "discriminator": [
        175,
        175,
        109,
        31,
        13,
        152,
        155,
        237
      ],
      "accounts": [
        {
          "name": "messenger",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  77,
                  69,
                  83,
                  83,
                  69,
                  78,
                  71,
                  69,
                  82
                ]
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "allowed_senders",
          "type": {
            "option": {
              "vec": "bytes"
            }
          }
        },
        {
          "name": "admin",
          "type": "pubkey"
        }
      ]
    },
    {
      "name": "noop",
      "docs": [
        "A dirty fix to make anchor add `CrossChainMessage` to IDL. It does't seem",
        "to register it when there are no public instructions that use the account",
        "in their context."
      ],
      "discriminator": [
        9,
        178,
        13,
        115,
        129,
        35,
        237,
        102
      ],
      "accounts": [
        {
          "name": "message"
        }
      ],
      "args": []
    },
    {
      "name": "register_extension",
      "docs": [
        "Registers the UIP messenger extension with the specified IPFS CID."
      ],
      "discriminator": [
        158,
        205,
        4,
        17,
        6,
        106,
        172,
        148
      ],
      "accounts": [
        {
          "name": "messenger"
        },
        {
          "name": "extension",
          "writable": true
        },
        {
          "name": "program_signer",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  85,
                  73,
                  80,
                  95,
                  83,
                  73,
                  71,
                  78,
                  69,
                  82
                ]
              }
            ]
          }
        },
        {
          "name": "admin",
          "signer": true
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "uip_program",
          "address": "uipby67GWuDDt1jZTWFdXNrsSu83kcxt9r5CLPTKGhX"
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "ipfs_cid",
          "type": {
            "array": [
              "u8",
              36
            ]
          }
        }
      ]
    },
    {
      "name": "send_message",
      "docs": [
        "Sends a cross-chain message to a specified destination, paying the",
        "specified `uip_fee`."
      ],
      "discriminator": [
        57,
        40,
        34,
        178,
        189,
        10,
        65,
        26
      ],
      "accounts": [
        {
          "name": "sender",
          "writable": true,
          "signer": true
        },
        {
          "name": "endpoint_config"
        },
        {
          "name": "uts_connector",
          "writable": true
        },
        {
          "name": "program_signer",
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  85,
                  73,
                  80,
                  95,
                  83,
                  73,
                  71,
                  78,
                  69,
                  82
                ]
              }
            ]
          }
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        },
        {
          "name": "uip_program",
          "address": "uipby67GWuDDt1jZTWFdXNrsSu83kcxt9r5CLPTKGhX"
        }
      ],
      "args": [
        {
          "name": "destination",
          "type": {
            "defined": {
              "name": "Destination"
            }
          }
        },
        {
          "name": "uip_fee",
          "type": "u64"
        },
        {
          "name": "custom_gas_limit",
          "type": "u128"
        },
        {
          "name": "text",
          "type": "string"
        }
      ]
    },
    {
      "name": "set_allowed_senders",
      "docs": [
        "Set the list of senders whose messages can be received."
      ],
      "discriminator": [
        246,
        71,
        11,
        140,
        2,
        46,
        69,
        126
      ],
      "accounts": [
        {
          "name": "messenger",
          "writable": true,
          "pda": {
            "seeds": [
              {
                "kind": "const",
                "value": [
                  77,
                  69,
                  83,
                  83,
                  69,
                  78,
                  71,
                  69,
                  82
                ]
              }
            ]
          }
        },
        {
          "name": "payer",
          "writable": true,
          "signer": true
        },
        {
          "name": "admin",
          "signer": true,
          "relations": [
            "messenger"
          ]
        },
        {
          "name": "system_program",
          "address": "11111111111111111111111111111111"
        }
      ],
      "args": [
        {
          "name": "allowed_senders",
          "type": {
            "option": {
              "vec": "bytes"
            }
          }
        }
      ]
    },
    {
      "name": "update_admin",
      "docs": [
        "Update the messenger admin."
      ],
      "discriminator": [
        117,
        112,
        100,
        95,
        97,
        100,
        109,
        110
      ],
      "accounts": [
        {
          "name": "messenger",
          "writable": true
        },
        {
          "name": "admin",
          "signer": true,
          "relations": [
            "messenger"
          ]
        }
      ],
      "args": [
        {
          "name": "new_admin",
          "type": "pubkey"
        }
      ]
    }
  ],
  "accounts": [
    {
      "name": "CrossChainMessage",
      "discriminator": [
        13,
        175,
        177,
        236,
        30,
        82,
        224,
        162
      ]
    },
    {
      "name": "Messenger",
      "discriminator": [
        205,
        224,
        95,
        59,
        70,
        64,
        188,
        58
      ]
    }
  ],
  "errors": [
    {
      "code": 6000,
      "name": "InvalidSignature",
      "msg": "Provided signature is invalid"
    },
    {
      "code": 6001,
      "name": "SenderNotAllowed",
      "msg": "Sender is not allowed"
    },
    {
      "code": 6002,
      "name": "SenderSmartContractNotAllowed",
      "msg": "Sender smart contract is not allowed"
    },
    {
      "code": 6003,
      "name": "DestinationSmartContractNotAllowed",
      "msg": "Destination smart contract is not allowed"
    }
  ],
  "types": [
    {
      "name": "CrossChainMessage",
      "docs": [
        "A received message."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "message_id",
            "docs": [
              "Identifier of the message (corresponds to the total number of messages",
              "received before the message)."
            ],
            "type": "u64"
          },
          {
            "name": "message_timestamp",
            "docs": [
              "Unix timestamp for when the message was received."
            ],
            "type": "i64"
          },
          {
            "name": "source_chain",
            "docs": [
              "Identifier for the chain from where the message was sent."
            ],
            "type": "u128"
          },
          {
            "name": "sender_addr",
            "docs": [
              "Sender wallet address."
            ],
            "type": "bytes"
          },
          {
            "name": "text",
            "docs": [
              "The text of the message."
            ],
            "type": "string"
          }
        ]
      }
    },
    {
      "name": "Destination",
      "docs": [
        "Different destination chains for sending messages."
      ],
      "type": {
        "kind": "enum",
        "variants": [
          {
            "name": "SolanaMainnet"
          },
          {
            "name": "SolanaDevnet"
          },
          {
            "name": "EthereumSepolia"
          },
          {
            "name": "PolygonAmoy"
          },
          {
            "name": "MantleSepolia"
          },
          {
            "name": "Teib"
          },
          {
            "name": "BaseSepolia"
          },
          {
            "name": "SonicBlazeTestnet"
          },
          {
            "name": "AvalancheFuji"
          },
          {
            "name": "Ethereum"
          },
          {
            "name": "Sonic"
          },
          {
            "name": "Avalanche"
          },
          {
            "name": "Eib"
          },
          {
            "name": "Polygon"
          },
          {
            "name": "MantaPacific"
          },
          {
            "name": "Abstract"
          },
          {
            "name": "Berachain"
          },
          {
            "name": "Mantle"
          },
          {
            "name": "Bsc"
          },
          {
            "name": "Immutable"
          },
          {
            "name": "Optimism"
          },
          {
            "name": "Base"
          },
          {
            "name": "Arbitrum"
          }
        ]
      }
    },
    {
      "name": "Messenger",
      "docs": [
        "The base structure for message configuration and statistics."
      ],
      "type": {
        "kind": "struct",
        "fields": [
          {
            "name": "admin",
            "docs": [
              "Messenger administrator, allowed to update `allowed_senders`."
            ],
            "type": "pubkey"
          },
          {
            "name": "received_message_count",
            "docs": [
              "Total number of messages received."
            ],
            "type": "u64"
          },
          {
            "name": "allowed_senders",
            "docs": [
              "The addresses of sender wallets, whose messages can be received.",
              "If `None`, any sender is allowed."
            ],
            "type": {
              "option": {
                "vec": "bytes"
              }
            }
          }
        ]
      }
    }
  ]
}
